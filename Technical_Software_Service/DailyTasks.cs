//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Technical_Software_Service
{
    using System;
    using System.Collections.Generic;
    using System.Windows.Media.Imaging;
    using System.IO;
    using System.Windows.Media;

    public partial class DailyTasks
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public DailyTasks()
        {
            this.UserDailyTasks = new HashSet<UserDailyTasks>();
        }
    
        public int Id { get; set; }
        public string Title { get; set; }
        public string Description { get; set; }
        public string Image { get; set; }
        public int XP { get; set; }
        public int Score { get; set; }
        public int TotalCount { get; set; }
        public int TaskTypeId { get; set; }

        public BitmapImage ImageSource
        {
            get
            {
                if (!string.IsNullOrEmpty(Image))
                {
                    string imagePath = Path.Combine(Directory.GetParent(Environment.CurrentDirectory).Parent.FullName, "Image", Image);

                    if (File.Exists(imagePath))
                    {
                        return new BitmapImage(new Uri(imagePath));
                    }
                }

                // Возвращаем изображение по умолчанию
                return new BitmapImage(new Uri("pack://application:,,,/Resources/Achievement.png"));
            }
        }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserDailyTasks> UserDailyTasks { get; set; }
        public virtual TaskType TaskType { get; set; }
    }
}
